FGDP
head(gdp)
sub(",","",FGDP$Total)
average(sub(",","",FGDP$Total))
mean(sub(",","",FGDP$Total))
x = (sub(",","",FGDP$Total))
mean(x)
FGDP$Total = (sub(",","",FGDP$Total))
mean(FDGP$Total)
class(FDGP$Total)
class(FGdP$Total)
class(FGDP$Total)
FGDP$Total = as.numeric(FGDP$Total)
mean(FGDP$Total)
FGDP$Total
FGDP$Total
class(FGDP$Total)
str(FGDP)
mean(FGDP$Total, rm.na= T)
View(FGDP)
#question 2
FGDP <- data.table::fread('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
, skip=4
, nrows = 190
, select = c(1, 2, 4, 5)
, col.names=c("CountryCode", "Rank", "Economy", "Total")
)
View(FGDP)
#question 2
FGDP <- data.table::fread('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
, skip=5
, nrows = 190
, select = c(1, 2, 4, 5)
, col.names=c("CountryCode", "Rank", "Economy", "Total")
)
View(FGDP)
FGDP$Total
FGDP$Total = (gsub(",","",FGDP$Total))
FGDP$Total
mean(FGDP$Total)
FGDP$Total = as.numeric(FGDP$Total)
mean(FGDP$Total)
#Q3
grep("^United",FGDP$CountryCode),
#Q3
grep("^United",FGDP$CountryCode)
#Q3
grep("^U",FGDP$CountryCode)
#Q3
x = grep("^U",FGDP$CountryCode)
FGDP[x,]
#Q3
x = grep("^U",FGDP$Economy)
#Q3
grep("^U",FGDP$Economy)
#Q3
grep("^United",FGDP$Economy)
#Q3
x= grep("^United",FGDP$Economy)
FGDP[x]
edu = read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
edu
str(edu)
str(FGDP)
data =merge(str,edu)
data = merge(str,edu, by = 'CountryCode')
class(edu)
class(FGDP)
edu = data.table(edu)
#Q3
library(data.table)
edu = as.data.table(edu)
data = merge(str,edu, by = 'CountryCode')
data = merge(str,edu, by = 'CountryCode')
edu = as.data.table(edu)
class(edu)
class(FGDP)
edu = fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
data = merge(str,edu, by = 'CountryCode')
#question 2
FGDP <- data.table::fread('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
, skip=5
, nrows = 190
, select = c(1, 2, 4, 5)
, col.names=c("CountryCode", "Rank", "Economy", "Total")
)
e(str,edu, by = 'CountryCode')
data = merge(str,edu, by = 'CountryCode')
?merge
?merge
?merge
?merge
data = data.table::merge(str,edu, by = 'CountryCode')
FGDP <- data.table::fread('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
, skip=4
, nrows = 190
, select = c(1, 2, 4, 5)
, col.names=c("CountryCode", "Rank", "Economy", "Total")
)
FGDP
FEDSTATS_Country <- data.table::fread('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
)
mergedDT <- merge(FGDP, FEDSTATS_Country, by = 'CountryCode')
X <- merge(FGDP, FEDSTATS_Country, by = 'CountryCode')
View(X)
grep("une", X$`Special Notes`)
X[x]
View(X[x])
x= grep("une", X$`Special Notes`)
x= grep("une", X$`Special Notes`)
x
View(X[x,X$`Special Notes`])
x= grep("Fiscal year end: june", X$`Special Notes`)
x
x= grep("Fiscal year end: june", X$Special Notes)
x= grep("Fiscal year end: june", X$'Special Notes')
x
x= grep("Fiscal year end: June", X$'Special Notes')
x= grep("Fiscal year end: June", X)
x
View(X[x])
X[x]
x= grep("Fiscal year end: June", X$`Special Notes`)
x
View(X[x])
length(X[x])
length(x)
install.packages("quantmod")
#q5
#
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampletIme
sampleTimes
length(sampleTimes)
class(sampleTimes)
str(sampleTimes)
str(sampleTimes[1])
filter(sampleTimes, year = 2012)
filter(sampleTimes, y == 2012)
filter(sampleTimes, 2012)
subset(temp, date = "2012")
subset(sampleTimes, date = "2012")
class(sampleTimes)
x <- sampleTimes
subset(x, "2012")
subset(x, year = "2012")
x <- tbl_df(x)
library(dplyr)
x <- tbl_df(x)
x
x >%> filter(value = as.year("2012"))
filter(x, value = as.year("2012"))
filter(x, date = as.year("2012"))
filter(x, date == as.year("2012"))
filter(x, date = as.date("2012"))
filter(x, date == as.date("2012"))
filter(x, date == as.Date("2012"))
class(x)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
year(sampleTimes)
years= year(sampleTimes)
cbind(sampleTimes, years)
x= cbind(sampleTimes, years)
sampleTimes
x= cbind(as.Date(sampleTimes), years)
x
sampleTimes = index(amzn)
sampleTimes
years= year(sampleTimes)
count(years, years == 2012)
days = days(sampleTimes)
days
days = wday(sampleTimes)
days
cbind(sampleTimes, years, days)
y = cbind(sampleTimes, years, days)
filter(y, y$years == 2012)
y = tbl_df(y)
filter(y, y$years == 2012)
length(filter(y, y$years == 2012))
filter(y, y$years == 2012)
filter(y, y$years == 2012 & y$days = 2)
filter(y, y$years == 2012 & y$days == 2)
#Setting the WD
setwd("C:/Users/Usuario1/Dropbox/Data Science")
if(!file.exists("WD")){
dir.create("WD")}
setwd("C:/Users/Usuario1/Dropbox/Data Science/WD")
download.file(fileurl)
#Setting the WD
setwd("C:/Users/Usuario1/Dropbox/Data Science")
download.file(fileurl, "./WD")
download.file(fileurl, "./WD/samsung.zip")
if(!file.exists("CP")){
dir.create("CP")}
download.file(fileurl, "./CP/samsung.zip")
unzip("./CP/samsung.zip")
#Downloading the file
fileurl = "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileurl, "./CP/samsung.zip")
unzip("./CP/samsung.zip")
list.files("./CP")
unzip("./CP/samsung.zip", exdir="./CP")
list.files("./CP")
#This is the actual folder where the data was sent
setwd("C:/Users/Usuario1/Dropbox/Data Science/CP/UCI HAR Dataset")
list.files(getwd())
#File Reading
test = read.csv("./test/subject_test)
#File Reading
test = read.csv("./test/subject_test")
#File Reading
test = read.csv("./test/subject_test")
#File Reading
test = read.csv("./test/subject_test.csv")
#File Reading
test = read.delim("./test/subject_test.csv")
#File Reading
test = read.delim("./test/subject_test.txt")
View(test)
#File Reading
s_train = read.delim("./train/subject_traintxt")
#File Reading
s_train = read.delim("./train/subject_train.txt")
#File Reading
s_train <- read.delim("/train/subject_train.txt")
#File Reading
s_train <- read.delim("/train/subject_train.txt")
#File Reading
s_train <- read.delim("./train/subject_train.txt")
s_train
class(s_train)
x_train <- read.delim("./train/x_train.txt")
#Binding
subjects = rbind(s_train,s_test)
#Test
s_test <- read.delim("./test/subject_test.txt")
x_test <- read.delim("./test/x_test.txt")
y_test <- read.delim("./test/y_test.txt")
#Binding
subjects = rbind(s_train,s_test)
#Binding
subjects <- rbind(s_train, s_test)
names(s_test)
names(s_train)
#Before binding, I need names to match
names(s_test) <- names(s_train)
#Binding
subjects <- rbind(s_train, s_test)
names(x_test) <- names(x_train)
names(y_test) <- names(y_train)
y_train <- read.delim("./train/y_train.txt")
names(y_test) <- names(y_train)
y_data <- rbind(y_train, y_test)
#Binding
subjects <- rbind(s_train, s_test)
x_data <- rbind(x_train, x_test)
y_data <- rbind(y_train, y_test)
head(x_data)
#Binding rows
all_data <- cbind(subject, x_data, y_data)
#Binding rows
all_data <- cbind(subjects, x_data, y_data)
all_data
head(all_data)
str(all_data)
str(all_data)
View(all_data)
s_train2 <- read.table("./train/subject_train.txt")
str(s_train2)
View(all_data)
#Binding rows
?rm
rm(all_data)
#Binding rows
features <- read.table("./UCI HAR Dataset/features.txt")
#Binding rows
features <- read.table("./features.txt")
activities <- read.table("./activity_labels.txt")
features
str(features)
str(activities)
str(subjects)
str(x_data)
#Extracting only means and std
selectedCols <- grep("-(mean|std).*", as.character(feature[,2]))
#Extracting only means and std
selectedCols <- grep("-(mean|std).*", features[,2])
selectedCols
features[selectedrows,]
#Extracting only means and std
selectedrows<- grep("-(mean|std).*", features[,2])
features[selectedrows,]
#Extracting only means and std
selectedCo.s<- grep("-(mean|std).*", features[,2])
selectedCols
selectedColNames <- feature[selectedCols, 2]
selectedColNames <- features[selectedCols, 2]
selectedColNames <- gsub("-mean", "Mean", selectedColNames)
selectedColNames <- gsub("-std", "Std", selectedColNames)
selectedColNames <- gsub("[-()]", "", selectedColNames)
#Changing to proper names
selectedColNames <- gsub("-mean", "Mean", selectedColNames)
selectedColNames <- gsub("-std", "Std", selectedColNames)
selectedColNames <- gsub("[-()]", "", selectedColNames)
features[selectedCols,]
selectedColNames
length(selectedColNames)
#
x_data <- x_data[selectedCols]
#Extracting only means and std
selectedCols<- grep("-(mean|std).*", features[,2])
selectedCols
#
x_data <- x_data[selectedCols]
x_data <- rbind(x_train, x_test)
#
str(x_data)
x_data[selectedCols]
?paste
x_train <- read.table(paste(sep = "", "./UCI HAR Dataset/train/X_train.txt"))
getwd
getwd()
x_train <- read.table(paste(sep = "", "./train/X_train.txt"))
str(x_train)
#File Reading
#Training
s_train <- read.table(paste(sep = "", "./train/subjetct_train.txt"))
#File Reading
#Training
s_train <- read.table(paste(sep = "", "./train/subject_train.txt"))
str(s_train)
str(y_train)
y_train <- read.table(paste(sep = "", "./train/Y_train.txt"))
str(y_train)
str(x_train)
#Test
s_test <- read.table(paste(sep = "", "./test/subject_test.txt"))
x_test <- read.table(paste(sep = "", "./test/X_test.txt"))
y_test <- read.table(paste(sep = "", "./test/Y_test.txt"))
str(s_test)
#Binding
subjects <- rbind(s_train, s_test)
x_data <- rbind(x_train, x_test)
y_data <- rbind(y_train, y_test)
#Extracting only means and std
selectedCols<- grep("-(mean|std).*", features[,2])
selectedCols
features[selectedCols,]
selectedColNames <- features[selectedCols, 2]
#Changing to proper names
selectedColNames <- gsub("-mean", "Mean", selectedColNames)
selectedColNames <- gsub("-std", "Std", selectedColNames)
selectedColNames <- gsub("[-()]", "", selectedColNames)
selectedColNames
length(selectedColNames)
#
x_data[selectedCols]
x_data <- x_data[selectedCols]
allData <- cbind(s_data, y_data, x_data)
#Binding
s_data <- rbind(s_train, s_test)
x_data <- rbind(x_train, x_test)
y_data <- rbind(y_train, y_test)
allData <- cbind(s_data, y_data, x_data)
str(allData)
names(allData)
allData[,2]
#Replacing y labels with activity names
merge(allData, activities, by.x= allData[,2], by.y = activities[,1])
#Replacing y labels with activity names
merge(allData, activities, by.x= 2, by.y = 1)
#Replacing y labels with activity names
mergedf = merge(allData, activities, by.x= 2, by.y = 1)
str(mergedf)
str(allData)
str(activities)
colnames(allData) <- c("Subject", "Activity", selectedColNames)
str(allData)
length(selectedColNames)
x_data <- x_data[selectedCols]
allData <- cbind(s_data, y_data, x_data)
colnames(allData) <- c("Subject", "Activity", selectedColNames)
str(allData)
#Replacing y labels with activity names
mergedf = merge(allData, activities, by.x= "Activity", by.y = 1)
str(mergedf)
#Reordering columns
mergy2 = mergedf[,c(2,82,3:81)]
str(mergy2)
#Reordering columns
mergedf = mergedf[,c(2,82,3:81)]
str(mergedf)
#renaming that V2 column
colnames(mergedf[2])
#renaming that V2 column
colnames(mergedf[2]) <- "Activity"
str(mergedf)
#renaming that V2 column
colnames(mergedf[2]) <- "Activity"
str(mergedf)
#renaming that V2 column
colnames(mergedf[2]) <- "Activity"
colnames(mergedf[2])
#renaming that V2 column
rename(mydata, Activity = V2)
#renaming that V2 column
rename(mergedf, Activity = V2)
str(mergedf)
library(dplyr)
#renaming that V2 column
rename(mergedf, Activity = V2)
str(mergedf)
colnames(mergedf)
colnames(mergedf[2])
names(mergedf[2])
names(mergedf[2]) <- "ac"
names(mergedf[2])
names(mergedf)[2]
names(mergedf)[2] <- "aaa"
str(mergedf)
#renaming that V2 column
names(mergedf[2]) <- "Activity"
#Check it out
View(mergedf)
str(allData)
str(mergedf)
length(mergedf)
alldata <- cbind(s_data, y_data, x_data)
colnames(alldata) <- c("Subject", "Activity", selectedColNames)
str(alldata)
#Replacing y labels with activity names
alldata$Activity
?as.factor
#Replacing y labels with activity names
alldata$Activity <- as.factor(alldata$Activity, levels= Activity[,1],
labels = Activity[,2])
#Replacing y labels with activity names
alldata$Activity <- factor(alldata$Activity, levels= Activity[,1],
labels = Activity[,2])
#Replacing y labels with activity names
alldata$Activity <- factor(alldata$activity, levels= activities[,1],
labels = activities[,2])
activities[,1]
str(activites)
str(activities)
#Replacing y labels with activity names
labels = activities[,2]
labels
alldata$Activity <- factor(alldata$activity, levels= activities[,1],
labels = labels)
alldata$Activity <- factor(alldata$Activity, levels= activities[,1],
labels = labels)
allData$Subject <- as.factor(allData$Subject)
alldata$Subject <- as.factor(alldata$Subject)
str(alldata)
levels= activities[,1]
levels
alldata$Activity <- factor(alldata$Activity, levels= activities[,1],
labels = labels)
str(alldata)
str(alldata)[1:4]
str(alldata)[[1:4]]
str(alldata)[,1:4]
str(alldata)[1:4,]
str(alldata)
levels(alldata$Activity)
#Check it out
View(alldata)
alldata <- cbind(s_data, y_data, x_data)
colnames(alldata) <- c("Subject", "Activity", selectedColNames)
str(alldata)
#Replacing y labels with activity names
labels = activities[,2]
alldata$Activity <- factor(alldata$Activity, levels= activities[,1],
labels = labels)
alldata$Subject <- as.factor(alldata$Subject)
str(alldata)
levels(alldata$Activity)
#Check it out
View(alldata)
#Meltit
meltedData <- melt(allData, id = c("Subject", "Activity"))
tidyData <- dcast(meltedData, Subject + Activity ~ variable, mean)
#Meltit
library(reshape)
install.packages("reshape2")
#Meltit
library(reshape2)
meltedData <- melt(allData, id = c("Subject", "Activity"))
tidyData <- dcast(meltedData, Subject + Activity ~ variable, mean)
?melt
?dcast
tidyData
write.table(tidyData, "./tidy_dataset.txt", row.names = FALSE, quote = FALSE)
str(meltedData)
meltedData <- melt(alldata, id = c("Subject", "Activity"))
str(meltedData)
tidyData <- dcast(meltedData, Subject + Activity ~ variable, mean)
tidyData
str(meltedData)
View(meltedData)
View(tidyData)
#Check it out
View(alldata)
levels(subject)
levels(subjects)
levels(alldata$Subject)
